{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp Probook\\\\weather-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=d17964bd50ad650c065c1cc255174b74\");\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        tempCurrent: this.calcelius(response.main.temp),\n        minTemp: this.calcelius(response.main.temp_min),\n        maxTemp: this.calcelius(response.main.temp_max),\n        description: response.weather[0].description\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\"\n    };\n    this.getWeather();\n  }\n\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      tempCurrent: this.state.tempCurrent,\n      minTemp: this.state.minTemp,\n      maxTemp: this.state.maxTemp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hp Probook/weather-app/src/App.js"],"names":["React","Weather","API_key","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","tempCurrent","calcelius","main","temp","minTemp","temp_min","maxTemp","temp_max","description","weather","state","undefined","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,UAhBc,GAgBD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mGAD0B,CAA5B;AAGA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,WAAW,EAAE,KAAKC,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcC,IAA7B,CAHD;AAIZC,QAAAA,OAAO,EAAE,KAAKH,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcG,QAA7B,CAJG;AAKZC,QAAAA,OAAO,EAAE,KAAKL,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcK,QAA7B,CALG;AAMZC,QAAAA,WAAW,EAAEjB,QAAQ,CAACkB,OAAT,CAAiB,CAAjB,EAAoBD;AANrB,OAAd;AAQD,KA9Ba;;AAEZ,SAAKE,KAAL,GAAa;AACXd,MAAAA,IAAI,EAAEe,SADK;AAEXb,MAAAA,OAAO,EAAEa,SAFE;AAGXX,MAAAA,WAAW,EAAEW,SAHF;AAIXP,MAAAA,OAAO,EAAEO,SAJE;AAKXL,MAAAA,OAAO,EAAEK,SALE;AAMXH,MAAAA,WAAW,EAAE;AANF,KAAb;AAQA,SAAKpB,UAAL;AACD;;AACDa,EAAAA,SAAS,CAACE,IAAD,EAAO;AACd,QAAIS,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWX,IAAI,GAAG,GAAlB,CAAX;AACA,WAAOS,IAAP;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWd,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKc,KAAL,CAAWZ,OAFtB;AAGE,MAAA,WAAW,EAAE,KAAKY,KAAL,CAAWF,WAH1B;AAIE,MAAA,WAAW,EAAE,KAAKE,KAAL,CAAWV,WAJ1B;AAKE,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWN,OALtB;AAME,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWJ,OANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AA7C+B;;AAgDlC,eAAerB,GAAf","sourcesContent":["import React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\"\n    };\n    this.getWeather();\n  }\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n  getWeather = async () => {\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=d17964bd50ad650c065c1cc255174b74\"\n    );\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      tempCurrent: this.calcelius(response.main.temp),\n      minTemp: this.calcelius(response.main.temp_min),\n      maxTemp: this.calcelius(response.main.temp_max),\n      description: response.weather[0].description\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          tempCurrent={this.state.tempCurrent}\n          minTemp={this.state.minTemp}\n          maxTemp={this.state.maxTemp}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}