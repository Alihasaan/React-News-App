{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp Probook\\\\weather-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nimport Form from \"./app_components/form.component\";\nimport \"./App.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async event => {\n      event.preventDefault(); // const city = event.target.elemets.city.value;\n      //  const country = event.target.elemets.country.value;\n\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + \"lahore\" + \",&appid=\" + API_key);\n      this.weatherIcon = {\n        Thunderstorm: \"wi-thunderstorm\",\n        Dizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Fog: \"wi-fog\",\n        Clear: \"wi-clear\",\n        Clouds: \"wi-day-fog\"\n      };\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        tempCurrent: this.calcelius(response.main.temp),\n        minTemp: this.calcelius(response.main.temp_min),\n        maxTemp: this.calcelius(response.main.temp_max),\n        description: response.weather[0].description\n      });\n      this.get_weatherIcon(this.weatherIcon, response.weather[0].id);\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined\n    };\n  }\n\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n\n  get_weatherIcon(icon, rangeID) {\n    if (rangeID >= 200 && rangeID <= 232) {\n      this.setState({\n        icon: this.weatherIcon.Thunderstorm\n      });\n    } else if (rangeID >= 300 && rangeID <= 321) {\n      this.setState({\n        icon: this.weatherIcon.Dizzle\n      });\n    } else if (rangeID >= 500 && rangeID <= 531) {\n      this.setState({\n        icon: this.weatherIcon.Rain\n      });\n    } else if (rangeID >= 600 && rangeID <= 622) {\n      this.setState({\n        icon: this.weatherIcon.Snow\n      });\n    } else if (rangeID >= 701 && rangeID <= 781) {\n      this.setState({\n        icon: this.weatherIcon.Fog\n      });\n    } else if (rangeID >= 801 && rangeID <= 804) {\n      this.setState({\n        icon: this.weatherIcon.Clouds\n      });\n    } else if (rangeID == 800) {\n      this.setState({\n        icon: this.weatherIcon.Clear\n      });\n    } else {\n      this.setState({\n        icon: this.weatherIcon.Clear\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      tempCurrent: this.state.tempCurrent,\n      minTemp: this.state.minTemp,\n      maxTemp: this.state.maxTemp,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hp Probook/weather-app/src/App.js"],"names":["React","Weather","Form","API_key","App","Component","constructor","getWeather","event","preventDefault","api_call","fetch","weatherIcon","Thunderstorm","Dizzle","Rain","Snow","Fog","Clear","Clouds","response","json","console","log","setState","city","name","country","sys","tempCurrent","calcelius","main","temp","minTemp","temp_min","maxTemp","temp_max","description","weather","get_weatherIcon","id","state","undefined","icon","cell","Math","floor","rangeID","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nimport Form from \"./app_components/form.component\";\nimport \"./App.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined\n    };\n  }\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n  get_weatherIcon(icon, rangeID) {\n    if (rangeID >= 200 && rangeID <= 232) {\n      this.setState({ icon: this.weatherIcon.Thunderstorm });\n    } else if (rangeID >= 300 && rangeID <= 321) {\n      this.setState({ icon: this.weatherIcon.Dizzle });\n    } else if (rangeID >= 500 && rangeID <= 531) {\n      this.setState({ icon: this.weatherIcon.Rain });\n    } else if (rangeID >= 600 && rangeID <= 622) {\n      this.setState({ icon: this.weatherIcon.Snow });\n    } else if (rangeID >= 701 && rangeID <= 781) {\n      this.setState({ icon: this.weatherIcon.Fog });\n    } else if (rangeID >= 801 && rangeID <= 804) {\n      this.setState({ icon: this.weatherIcon.Clouds });\n    } else if (rangeID == 800) {\n      this.setState({ icon: this.weatherIcon.Clear });\n    } else {\n      this.setState({ icon: this.weatherIcon.Clear });\n    }\n  }\n  getWeather = async (event) => {\n     event.preventDefault();\n    // const city = event.target.elemets.city.value;\n    //  const country = event.target.elemets.country.value;\n\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n        \"lahore\" +\n        \",&appid=\" +\n        API_key\n    );\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Dizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Fog: \"wi-fog\",\n      Clear: \"wi-clear\",\n      Clouds: \"wi-day-fog\"\n    };\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      tempCurrent: this.calcelius(response.main.temp),\n      minTemp: this.calcelius(response.main.temp_min),\n      maxTemp: this.calcelius(response.main.temp_max),\n      description: response.weather[0].description\n    });\n    this.get_weatherIcon(this.weatherIcon, response.weather[0].id);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather()} />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          tempCurrent={this.state.tempCurrent}\n          minTemp={this.state.minTemp}\n          maxTemp={this.state.maxTemp}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}