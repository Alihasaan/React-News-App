{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp Probook\\\\news-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nimport Form from \"./app_components/form.component\";\nimport \"./App.css\";\nconst API_key = \"e4d4431929f441568bdcc6cc7b55f8cc\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city) {\n        const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + city + \",\" + country + \"&appid=\" + API_key // \"d17964bd50ad650c065c1cc255174b74\"\n        );\n        const response = await api_call.json();\n        console.log(response);\n        this.setState({\n          city: response.name + \" , \" + response.sys.country,\n          tempCurrent: this.calcelius(response.main.temp),\n          minTemp: this.calcelius(response.main.temp_min),\n          maxTemp: this.calcelius(response.main.temp_max),\n          description: response.weather[0].description,\n          error: false\n        });\n        this.get_weatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined,\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Dizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Fog: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n\n  get_weatherIcon(icon, rangeID) {\n    if (rangeID >= 200 && rangeID <= 232) {\n      this.setState({\n        icon: this.weatherIcon.Thunderstorm\n      });\n    } else if (rangeID >= 300 && rangeID <= 321) {\n      this.setState({\n        icon: this.weatherIcon.Dizzle\n      });\n    } else if (rangeID >= 500 && rangeID <= 531) {\n      this.setState({\n        icon: this.weatherIcon.Rain\n      });\n    } else if (rangeID >= 600 && rangeID <= 622) {\n      this.setState({\n        icon: this.weatherIcon.Snow\n      });\n    } else if (rangeID >= 701 && rangeID <= 781) {\n      this.setState({\n        icon: this.weatherIcon.Fog\n      });\n    } else if (rangeID >= 801 && rangeID <= 804) {\n      this.setState({\n        icon: this.weatherIcon.Clouds\n      });\n    } else if (rangeID === 800) {\n      this.setState({\n        icon: this.weatherIcon.Clear\n      });\n    } else {\n      this.setState({\n        icon: this.weatherIcon.Clear\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      tempCurrent: this.state.tempCurrent,\n      minTemp: this.state.minTemp,\n      maxTemp: this.state.maxTemp,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hp Probook/news-app/src/App.js"],"names":["React","Weather","Form","API_key","App","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","setState","name","sys","tempCurrent","calcelius","main","temp","minTemp","temp_min","maxTemp","temp_max","description","weather","error","get_weatherIcon","weatherIcon","id","state","undefined","icon","Thunderstorm","Dizzle","Rain","Snow","Fog","Clear","Clouds","cell","Math","floor","rangeID","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nimport Form from \"./app_components/form.component\";\nimport \"./App.css\";\nconst API_key = \"e4d4431929f441568bdcc6cc7b55f8cc\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined,\n      error : false\n      \n    };\n  \n  this.weatherIcon = {\n    Thunderstorm: \"wi-thunderstorm\",\n    Dizzle: \"wi-sleet\",\n    Rain: \"wi-storm-showers\",\n    Snow: \"wi-snow\",\n    Fog: \"wi-fog\",\n    Clear: \"wi-day-sunny\",\n    Clouds: \"wi-day-fog\"\n  };\n}\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n  get_weatherIcon(icon, rangeID) {\n    if (rangeID >= 200 && rangeID <= 232) {\n      this.setState({ icon: this.weatherIcon.Thunderstorm });\n    } else if (rangeID >= 300 && rangeID <= 321) {\n      this.setState({ icon: this.weatherIcon.Dizzle });\n    } else if (rangeID >= 500 && rangeID <= 531) {\n      this.setState({ icon: this.weatherIcon.Rain });\n    } else if (rangeID >= 600 && rangeID <= 622) {\n      this.setState({ icon: this.weatherIcon.Snow });\n    } else if (rangeID >= 701 && rangeID <= 781) {\n      this.setState({ icon: this.weatherIcon.Fog });\n    } else if (rangeID >= 801 && rangeID <= 804) {\n      this.setState({ icon: this.weatherIcon.Clouds });\n    } else if (rangeID === 800) {\n      this.setState({ icon: this.weatherIcon.Clear });\n    } else {\n      this.setState({ icon: this.weatherIcon.Clear });\n    }\n  }\n  getWeather = async (e) => {\n    \n      e.preventDefault();\n    const city = e.target.elements.city.value; \n    const country = e.target.elements.country.value; \n    if(city){\n      const api_call = await fetch(\n        \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n         city + \",\"+\n         country+\n         \"&appid=\" +\n         API_key \n        // \"d17964bd50ad650c065c1cc255174b74\"\n          \n      );\n     \n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name +\" , \"+response.sys.country ,\n        tempCurrent: this.calcelius(response.main.temp),\n        minTemp: this.calcelius(response.main.temp_min),\n        maxTemp: this.calcelius(response.main.temp_max),\n        description: response.weather[0].description,\n        error : false\n      });\n      this.get_weatherIcon(this.weatherIcon, response.weather[0].id);\n    }\n    else{\n        this.setState({error : true})\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error = {this.state.error}\n         />\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          tempCurrent={this.state.tempCurrent}\n          minTemp={this.state.minTemp}\n          maxTemp={this.state.maxTemp}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}