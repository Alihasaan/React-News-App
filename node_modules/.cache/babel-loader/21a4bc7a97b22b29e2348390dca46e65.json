{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp Probook\\\\weather-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Islamabad,&appid=d17964bd50ad650c065c1cc255174b74\");\n      this.weatherIcon = {\n        Thunderstorm: \"wi-thunderstorm\",\n        Dizzle: \"wi-sleet\",\n        Rain: \"wi-storm-showers\",\n        Snow: \"wi-snow\",\n        Fog: \"wi-fog\",\n        Clear: \"wi-clear\",\n        Clouds: \"wi-day-fog\"\n      };\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        tempCurrent: this.calcelius(response.main.temp),\n        minTemp: this.calcelius(response.main.temp_min),\n        maxTemp: this.calcelius(response.main.temp_max),\n        description: response.weather[0].description,\n        icon: this.weatherIcon.Fog\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined\n    };\n    this.getWeather();\n  }\n\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      tempCurrent: this.state.tempCurrent,\n      minTemp: this.state.minTemp,\n      maxTemp: this.state.maxTemp,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hp Probook/weather-app/src/App.js"],"names":["React","Weather","API_key","App","Component","constructor","getWeather","api_call","fetch","weatherIcon","Thunderstorm","Dizzle","Rain","Snow","Fog","Clear","Clouds","response","json","console","log","setState","city","name","country","sys","tempCurrent","calcelius","main","temp","minTemp","temp_min","maxTemp","temp_max","description","weather","icon","state","undefined","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAO,sCAAP;AACA,OAAO,4CAAP;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,UAjBc,GAiBD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oGAD0B,CAA5B;AAGA,WAAKC,WAAL,GAAmB;AACjBC,QAAAA,YAAY,EAAE,iBADG;AAEjBC,QAAAA,MAAM,EAAE,UAFS;AAGjBC,QAAAA,IAAI,EAAE,kBAHW;AAIjBC,QAAAA,IAAI,EAAE,SAJW;AAKjBC,QAAAA,GAAG,EAAE,QALY;AAMjBC,QAAAA,KAAK,EAAE,UANU;AAOjBC,QAAAA,MAAM,EAAE;AAPS,OAAnB;AASA,YAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,WAAW,EAAE,KAAKC,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcC,IAA7B,CAHD;AAIZC,QAAAA,OAAO,EAAE,KAAKH,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcG,QAA7B,CAJG;AAKZC,QAAAA,OAAO,EAAE,KAAKL,SAAL,CAAeV,QAAQ,CAACW,IAAT,CAAcK,QAA7B,CALG;AAMZC,QAAAA,WAAW,EAAEjB,QAAQ,CAACkB,OAAT,CAAiB,CAAjB,EAAoBD,WANrB;AAOZE,QAAAA,IAAI,EAAE,KAAK3B,WAAL,CAAiBK;AAPX,OAAd;AASD,KAzCa;;AAEZ,SAAKuB,KAAL,GAAa;AACXf,MAAAA,IAAI,EAAEgB,SADK;AAEXd,MAAAA,OAAO,EAAEc,SAFE;AAGXZ,MAAAA,WAAW,EAAEY,SAHF;AAIXR,MAAAA,OAAO,EAAEQ,SAJE;AAKXN,MAAAA,OAAO,EAAEM,SALE;AAMXJ,MAAAA,WAAW,EAAE,EANF;AAOXE,MAAAA,IAAI,EAAEE;AAPK,KAAb;AASA,SAAKhC,UAAL;AACD;;AACDqB,EAAAA,SAAS,CAACE,IAAD,EAAO;AACd,QAAIU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWZ,IAAI,GAAG,GAAlB,CAAX;AACA,WAAOU,IAAP;AACD;;AA0BDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWf,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKe,KAAL,CAAWb,OAFtB;AAGE,MAAA,WAAW,EAAE,KAAKa,KAAL,CAAWH,WAH1B;AAIE,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWX,WAJ1B;AAKE,MAAA,OAAO,EAAE,KAAKW,KAAL,CAAWP,OALtB;AAME,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWL,OANtB;AAOE,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWD,IAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AAzD+B;;AA4DlC,eAAejC,GAAf","sourcesContent":["import React from \"react\";\nimport Weather from \"./app_components/weather.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons-master/css/weather-icons.css\";\nconst API_key = \"d17964bd50ad650c065c1cc255174b74\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      tempCurrent: undefined,\n      minTemp: undefined,\n      maxTemp: undefined,\n      description: \"\",\n      icon: undefined\n    };\n    this.getWeather();\n  }\n  calcelius(temp) {\n    let cell = Math.floor(temp - 273);\n    return cell;\n  }\n  getWeather = async () => {\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=Islamabad,&appid=d17964bd50ad650c065c1cc255174b74\"\n    );\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Dizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Fog: \"wi-fog\",\n      Clear: \"wi-clear\",\n      Clouds: \"wi-day-fog\"\n    };\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      tempCurrent: this.calcelius(response.main.temp),\n      minTemp: this.calcelius(response.main.temp_min),\n      maxTemp: this.calcelius(response.main.temp_max),\n      description: response.weather[0].description,\n      icon: this.weatherIcon.Fog\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          description={this.state.description}\n          tempCurrent={this.state.tempCurrent}\n          minTemp={this.state.minTemp}\n          maxTemp={this.state.maxTemp}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}